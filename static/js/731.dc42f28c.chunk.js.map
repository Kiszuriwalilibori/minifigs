{"version":3,"file":"static/js/731.dc42f28c.chunk.js","mappings":"8QA6CA,EAlC2B,SAACA,GACxB,IAAQC,EAA2DD,EAA3DC,QAASC,EAAkDF,EAAlDE,aAAa,EAAqCF,EAApCG,WAAAA,OAAU,OAAQ,EAAEC,EAAgBJ,EAAhBI,YAEnD,OACI,iBACIC,UAAWF,EAAa,uBAAyB,cACjDG,QAAS,SAAAC,GACLA,EAAEC,kBACFN,EAAaD,EACjB,EAAE,WAEF,UAAC,KAAW,CACRI,UAAU,qCACVC,QAAS,SAAAC,GACLA,EAAEC,kBACFN,EAAaD,EACjB,EAAE,WAEF,SAAC,IAAO,CAACQ,SAAUR,EAAQS,YAAaC,KAAMV,EAAQU,KAAMP,YAAaA,KACzE,SAAC,KAAI,CAACO,KAAMV,EAAQU,WAExB,cAAGN,UAAU,cAAc,uCAA+BJ,EAAQU,KAAI,QAAQC,OAAO,QAAQC,KAAMZ,EAAQa,QAASC,UAAW,EAAE,UAC7H,mBACIT,QAAS,SAAAC,GACLA,EAAEC,iBACN,EAAE,8BAOtB,E,UCoBA,EA/Ce,SAACR,GACZ,IAAQgB,EAAahB,EAAbgB,SACFC,GAAUC,EAAAA,EAAAA,MAChB,GAAgCC,EAAAA,EAAAA,UAA0B,CAAC,GAAE,eAAtDC,EAAQ,KAAEC,EAAW,KACtBC,GAAYC,EAAAA,EAAAA,QAAuB,MAEjCC,GAAyBC,EAAAA,EAAAA,MAAzBD,qBACFE,GAAgBC,EAAAA,EAAAA,cAAY,SAAC1B,GAC/BoB,EAAYpB,EAEhB,GAAG,IAGG2B,GAASD,EAAAA,EAAAA,cACXE,EAAAA,EAAAA,OAAMb,EAASc,QAAQ,WAAO,IAAD,EACR,QAAjB,EAAAR,EAAUS,eAAO,OAAjB,EAAmBC,UAAUC,IAAI,SACrC,IACA,IAGJ,OACI,iBAAM5B,UAAU,SAAQ,UACpB,iBAAKA,UAAU,sBAAqB,WAChC,iDACA,gBAAKA,UAAU,SAAS6B,IAAKZ,EAAU,SAClCN,GACGA,EAASmB,KAAI,SAAAC,GACT,IAAMC,EAAcC,IAAQF,EAAKhB,GACjC,OAAOgB,IAAO,SAAC,EAAW,CAAcnC,QAASmC,EAAKlC,aAAcwB,EAAevB,WAAYkC,EAAajC,YAAawB,GAAzFW,MACpC,OAER,SAAC,KAAW,CACRC,UAAUC,EAAAA,EAAAA,SAAQrB,GAClBf,UAAU,oBACVC,QAAS,SAAAC,GACLA,EAAEC,kBACFgB,EAAsBJ,EAAqBsB,SAC3CzB,EAAQ0B,EAAAA,EAAAA,MACZ,EAAE,qCAOtB,ECpDA,GAAeC,EAAAA,EAAAA,KAJS,SAACC,GAAoB,MAAM,CAC/C7B,SAAU6B,EAAMC,KAAK9B,SACxB,GAEuC,CAAC,EAAzC,CAA4C+B,E","sources":["pages/Select_Page/components/MinifigCard.tsx","pages/Select_Page/Select.tsx","pages/Select_Page/index.ts"],"sourcesContent":["import { Minifig, SelectedMinifig } from \"types\";\r\nimport { BasicButton, Name, Picture } from \"components\";\r\nimport { ReactEventHandler } from \"react\";\r\n\r\ninterface Props {\r\n    minifig: Minifig;\r\n    clickHandler: (minifig: SelectedMinifig) => void;\r\n    isSelected?: boolean;\r\n    loadHandler: ReactEventHandler<HTMLImageElement>;\r\n}\r\n\r\nexport const MinifigCard = (props: Props) => {\r\n    const { minifig, clickHandler, isSelected = false, loadHandler } = props;\r\n\r\n    return (\r\n        <div\r\n            className={isSelected ? \"minifigCard selected\" : \"minifigCard\"}\r\n            onClick={e => {\r\n                e.stopPropagation();\r\n                clickHandler(minifig);\r\n            }}\r\n        >\r\n            <BasicButton\r\n                className=\"flexbox-column-centered textBlack \"\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    clickHandler(minifig);\r\n                }}\r\n            >\r\n                <Picture imageURL={minifig.set_img_url} name={minifig.name} loadHandler={loadHandler} />\r\n                <Name name={minifig.name} />\r\n            </BasicButton>\r\n            <a className=\"showDetails\" aria-label={`Show details of ${minifig.name} set`} target=\"blank\" href={minifig.set_url} tabIndex={-1}>\r\n                <button\r\n                    onClick={e => {\r\n                        e.stopPropagation();\r\n                    }}\r\n                >\r\n                    Show Details\r\n                </button>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MinifigCard;\r\n","import uuid from \"react-uuid\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nimport { after, isEmpty } from \"lodash\";\r\nimport { useCallback, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useDispatchAction } from \"hooks\";\r\nimport { Minifig, SelectedMinifig } from \"types\";\r\nimport { MinifigCard } from \"./components\";\r\nimport { BasicButton } from \"components\";\r\nimport { Paths } from \"routes/paths\";\r\n\r\ninterface Props {\r\n    minifigs: Minifig[];\r\n}\r\nconst Select = (props: Props) => {\r\n    const { minifigs } = props;\r\n    const history = useNavigate();\r\n    const [selected, setSelected] = useState<SelectedMinifig>({});\r\n    const refImages = useRef<HTMLDivElement>(null);\r\n\r\n    const { setSelectedMinifigId } = useDispatchAction();\r\n    const selectMinifig = useCallback((minifig: SelectedMinifig) => {\r\n        setSelected(minifig);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const onLoad = useCallback(\r\n        after(minifigs.length, () => {\r\n            refImages.current?.classList.add(\"active\");\r\n        }),\r\n        []\r\n    );\r\n\r\n    return (\r\n        <main className=\"select\">\r\n            <div className=\"select__content-box\">\r\n                <h1>Choose your minifig</h1>\r\n                <div className=\"images\" ref={refImages}>\r\n                    {minifigs &&\r\n                        minifigs.map(fig => {\r\n                            const wasSelected = isEqual(fig, selected);\r\n                            return fig && <MinifigCard key={uuid()} minifig={fig} clickHandler={selectMinifig} isSelected={wasSelected} loadHandler={onLoad} />;\r\n                        })}\r\n                </div>\r\n                <BasicButton\r\n                    disabled={isEmpty(selected)}\r\n                    className=\"button uppercased\"\r\n                    onClick={e => {\r\n                        e.stopPropagation();\r\n                        setSelectedMinifigId((selected as Minifig).set_num);\r\n                        history(Paths.order);\r\n                    }}\r\n                >\r\n                    Proceed to shipment\r\n                </BasicButton>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport { RootStateType } from \"types\";\r\nimport Select from \"./Select\";\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n    minifigs: state.draw.minifigs,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Select);\r\n"],"names":["props","minifig","clickHandler","isSelected","loadHandler","className","onClick","e","stopPropagation","imageURL","set_img_url","name","target","href","set_url","tabIndex","minifigs","history","useNavigate","useState","selected","setSelected","refImages","useRef","setSelectedMinifigId","useDispatchAction","selectMinifig","useCallback","onLoad","after","length","current","classList","add","ref","map","fig","wasSelected","isEqual","uuid","disabled","isEmpty","set_num","Paths","connect","state","draw","Select"],"sourceRoot":""}