{"version":3,"file":"static/js/355.17dff37b.chunk.js","mappings":"sRA2DA,EA1Ce,SAACA,GACZ,IAAQC,EAAaD,EAAbC,SACFC,GAAUC,EAAAA,EAAAA,MAChB,GAAgCC,EAAAA,EAAAA,UAA0B,CAAC,GAAE,eAAtDC,EAAQ,KAAEC,EAAW,KACtBC,GAAYC,EAAAA,EAAAA,QAAuB,MAEjCC,GAAiBC,EAAAA,EAAAA,KAAjBD,aACFE,GAAgBC,EAAAA,EAAAA,cAAY,SAACC,GAC/BP,EAAYO,EAEhB,GAAG,IAEGC,GAASC,EAAAA,EAAAA,OAAMd,EAASe,QAAQ,WAAO,IAAD,EACvB,QAAjB,EAAAT,EAAUU,eAAO,OAAjB,EAAmBC,UAAUC,IAAI,SACrC,IAEA,OACI,gBAAKC,UAAU,SAAQ,UACnB,iBAAKA,UAAU,sBAAqB,WAChC,iDACA,gBAAKA,UAAU,SAASC,IAAKd,EAAU,SAClCN,GACGA,EAASqB,KAAI,SAAAC,GACT,OAAOA,IAAO,SAAC,KAAK,CAAcV,QAASU,EAAKC,aAAcb,EAAec,WAAYC,IAAQH,EAAKlB,GAAWsB,YAAab,GAApGc,MAC9B,OAER,SAAC,KAAW,CACRC,UAAUC,EAAAA,EAAAA,SAAQzB,GAClBe,UAAU,oBACVW,QAAS,SAAAC,GACLA,EAAEC,kBACFxB,EAAaJ,GACbH,EAAQgC,EAAAA,EAAAA,MACZ,EAAE,qCAOtB,EChDA,GAAeC,EAAAA,EAAAA,KAJS,SAACC,GAAoB,MAAM,CAC/CnC,SAAUmC,EAAMC,MAAMpC,SACzB,GAEuC,CAAC,EAAzC,CAA4CqC,E","sources":["pages/Select_Page/Select.tsx","pages/Select_Page/index.ts"],"sourcesContent":["import uuid from \"react-uuid\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nimport { after, isEmpty } from \"lodash\";\r\nimport { useCallback, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport useDispatchAction from \"hooks/useDispatchAction\";\r\n\r\nimport { Minifig, SelectedMinifig } from \"types/types\";\r\nimport { Image } from \"components\";\r\nimport { BasicButton } from \"components\";\r\nimport { Paths } from \"routes/paths\";\r\n\r\ninterface Props {\r\n    minifigs: Minifig[];\r\n}\r\nconst Select = (props: Props) => {\r\n    const { minifigs } = props;\r\n    const history = useNavigate();\r\n    const [selected, setSelected] = useState<SelectedMinifig>({});\r\n    const refImages = useRef<HTMLDivElement>(null);\r\n\r\n    const { setSelection } = useDispatchAction();\r\n    const selectMinifig = useCallback((minifig: SelectedMinifig) => {\r\n        setSelected(minifig);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const onLoad = after(minifigs.length, () => {\r\n        refImages.current?.classList.add(\"active\");\r\n    });\r\n\r\n    return (\r\n        <div className=\"select\">\r\n            <div className=\"select__content-box\">\r\n                <h2>Choose your minifig</h2>\r\n                <div className=\"images\" ref={refImages}>\r\n                    {minifigs &&\r\n                        minifigs.map(fig => {\r\n                            return fig && <Image key={uuid()} minifig={fig} clickHandler={selectMinifig} isSelected={isEqual(fig, selected)} loadHandler={onLoad} />;\r\n                        })}\r\n                </div>\r\n                <BasicButton\r\n                    disabled={isEmpty(selected)}\r\n                    className=\"button uppercased\"\r\n                    onClick={e => {\r\n                        e.stopPropagation();\r\n                        setSelection(selected);\r\n                        history(Paths.order);\r\n                    }}\r\n                >\r\n                    Proceed to shipment\r\n                </BasicButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport { RootStateType } from \"types\";\r\nimport Select from \"./Select\";\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n    minifigs: state.fetch.minifigs,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Select);\r\n"],"names":["props","minifigs","history","useNavigate","useState","selected","setSelected","refImages","useRef","setSelection","useDispatchAction","selectMinifig","useCallback","minifig","onLoad","after","length","current","classList","add","className","ref","map","fig","clickHandler","isSelected","isEqual","loadHandler","uuid","disabled","isEmpty","onClick","e","stopPropagation","Paths","connect","state","fetch","Select"],"sourceRoot":""}